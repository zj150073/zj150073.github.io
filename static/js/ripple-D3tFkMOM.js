var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o;const a=Vue.createElementVNode("p",{class:"font-medium"},"波纹(Ripple)",-1),i=Vue.createElementVNode("div",{class:"mb-5"},"组件中的波纹",-1),n=Vue.createElementVNode("div",{class:"mb-5"}," 只要在组件或HTML元素上使用v-ripple指令，就可以启用基本的ripple功能 ",-1),V={class:"mb-5 text-center shadow-md rounded-md p-8 text-lg select-none"},s={class:"inline-block shadow-md rounded-md p-8 text-lg select-none"},p=Vue.createElementVNode("div",{class:"my-5"}," 当使用v-ripple.center时，将始终从目标的中心处产生波纹 ",-1),d={class:"mb-5 text-center shadow-md rounded-md p-8 text-lg select-none"},m=Vue.createElementVNode("div",{class:"mb-5"}," 使用v-ripple=\"{ class: '' }\"添加类来自定义波纹颜色，支持tailwindcss ",-1),v={class:"my-5 text-center shadow-md rounded-md p-4 text-lg select-none"},w=Vue.defineComponent((h=((e,t)=>{for(var r in t||(t={}))l.call(t,r)&&u(e,r,t[r]);if(o)for(var r of o(t))c.call(t,r)&&u(e,r,t[r]);return e})({},{name:"Ripple"}),t(h,r({__name:"ripple",setup:e=>(e,t)=>{const r=Vue.resolveComponent("el-link"),o=Vue.resolveComponent("el-alert"),l=Vue.resolveComponent("el-button"),c=Vue.resolveComponent("el-space"),u=Vue.resolveComponent("el-card"),w=Vue.resolveDirective("ripple");return Vue.openBlock(),Vue.createBlock(u,{shadow:"never"},{header:Vue.withCtx((()=>[a,Vue.createVNode(r,{class:"mt-2",href:"https://github.com/pure-admin/vue-pure-admin/blob/main/src/views/able/ripple.vue",target:"_blank"},{default:Vue.withCtx((()=>[Vue.createTextVNode(" 代码位置 src/views/able/ripple.vue ")])),_:1})])),default:Vue.withCtx((()=>[i,Vue.createVNode(o,{title:"v-ripple在某些组件中使用波纹特效会异常，这是因为v-ripple指令只能作用于当前元素，某些组件有多层元素嵌套，且目标元素没在顶层，所以会导致特效异常",type:"warning",closable:!1}),Vue.createVNode(c,{wrap:"",class:"my-5"},{default:Vue.withCtx((()=>[Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,null,{default:Vue.withCtx((()=>[Vue.createTextVNode("Default")])),_:1})),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,{type:"primary"},{default:Vue.withCtx((()=>[Vue.createTextVNode("Primary")])),_:1})),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,{type:"success"},{default:Vue.withCtx((()=>[Vue.createTextVNode("Success")])),_:1})),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,{type:"info"},{default:Vue.withCtx((()=>[Vue.createTextVNode("Info")])),_:1})),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,{type:"warning"},{default:Vue.withCtx((()=>[Vue.createTextVNode("Warning")])),_:1})),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(l,{type:"danger"},{default:Vue.withCtx((()=>[Vue.createTextVNode("Danger")])),_:1})),[[w]])])),_:1}),Vue.withDirectives((Vue.openBlock(),Vue.createBlock(u,{class:"mb-5 w-[510px] select-none",shadow:"hover"},{default:Vue.withCtx((()=>[Vue.createTextVNode(" 卡片 ")])),_:1})),[[w]]),n,Vue.withDirectives((Vue.openBlock(),Vue.createElementBlock("div",V,[Vue.createTextVNode(" HTML元素 ")])),[[w]]),Vue.withDirectives((Vue.openBlock(),Vue.createElementBlock("span",s,[Vue.createTextVNode(" 行内元素需要添加display: block或display: inline-block才能生效 ")])),[[w]]),p,Vue.withDirectives((Vue.openBlock(),Vue.createElementBlock("div",d,[Vue.createTextVNode(" 始终从中心触发波纹 ")])),[[w,void 0,void 0,{center:!0}]]),m,Vue.createVNode(o,{title:"自定义样式生效为文字颜色，例如：color: 'red';",type:"warning",closable:!1}),Vue.withDirectives((Vue.openBlock(),Vue.createElementBlock("div",v,[Vue.createTextVNode(" 自定义波纹颜色 ")])),[[w,{class:"text-red-500"}]])])),_:1})}}))));var h;export{w as default};
