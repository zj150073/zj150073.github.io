var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,a=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&a(e,r,t[r]);if(o)for(var r of o(t))n.call(t,r)&&a(e,r,t[r]);return e};import{R as p,M as i}from"./index-DK9WUj9J.js";var s;const c=i(Vue.defineComponent((s=u({},{name:"ReText"}),t(s,r({__name:"index",props:{lineClamp:{type:[String,Number]},tippyProps:{type:Object,default:()=>({})}},setup(e){const t=e,r=Vue.useSlots(),o=Vue.ref(),l=Vue.ref(),n=()=>u({content:Vue.h(r.content||r.default)},t.tippyProps);function a(e){var r;r=e.target,(t.lineClamp?r.scrollHeight>r.clientHeight:r.scrollWidth>r.clientWidth)?(l.value.setProps(n()),l.value.enable()):l.value.disable()}return Vue.onMounted((()=>{var e;l.value=p(null==(e=o.value)?void 0:e.$el,n())})),(t,r)=>{const l=Vue.resolveComponent("el-text");return Vue.openBlock(),Vue.createBlock(l,Vue.mergeProps(u({truncated:!e.lineClamp,lineClamp:e.lineClamp},t.$attrs),{ref_key:"textRef",ref:o,onMouseover:Vue.withModifiers(a,["self"])}),{default:Vue.withCtx((()=>[Vue.renderSlot(t.$slots,"default")])),_:3},16)}}})))));export{c as R};
