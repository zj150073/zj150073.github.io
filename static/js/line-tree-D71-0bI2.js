var e=Object.defineProperty,t=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,r=(t,a,l)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:l}):t[a]=l,d=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&r(e,a,t[a]);if(l)for(var a of l(t))n.call(t,a)&&r(e,a,t[a]);return e},o=(e,l)=>t(e,a(l));import{d as i,N as u,ad as h,a8 as c,a9 as p,p as f,aa as b,ab as m,b as v,w as y,e as w,f as x,g,i as _,h as S,u as L,t as k,ac as O}from"./index-07XH1eRd.js";const j=i({name:"ReTreeLine",props:{node:{type:Object,required:!0},data:{type:Array,default:()=>{}},treeData:{type:Array,default:()=>[]},indent:{type:Number,default:16},showLabelLine:{type:Boolean,default:!0}},setup(e,t){const{slots:a}=t;return{getScopedSlot:e=>{if(!e)return null;const t=e.split("||");let l=null;for(let s=0;s<t.length;s++){const e=t[s];l=(a||{})[e]}return l},getSlotValue:(e,t,a=null)=>h(e)?e(t)||a:e||a}},render(){const e=this.getScopedSlot("default"),t=this.getScopedSlot("node-label"),a=this.getScopedSlot("after-node-label"),l=e?this.getSlotValue(e,{node:this.node,data:this.data}):[t?this.getSlotValue(t,{node:this.node,data:this.data}):u("span",{class:"element-tree-node-label"},this.node.label),this.showLabelLine?u("span",{class:"element-tree-node-label-line"}):null,this.getSlotValue(a,{node:this.node,data:this.data})],s=[];let n=this.node;for(;n;){let e=n.parent;if(1===n.level&&!n.parent){if(!this.treeData||!Array.isArray(this.treeData))throw Error("if you using el-tree-v2 (Virtualized Tree) of element-plus,element-tree-line required data.");e={children:Array.isArray(this.treeData)?this.treeData.map((e=>o(d({},e),{key:e.id}))):[],level:0,key:"node-0",parent:null}}if(e){const t=(e.children||e.childNodes).findIndex((e=>(e.key||e.id)===(n.key||n.id)));s.unshift(t===(e.children||e.childNodes).length-1)}n=e}const r=[];for(let d=0;d<this.node.level;d++)r.push(u("span",{class:{"element-tree-node-line-ver":!0,"last-node-line":s[d]&&this.node.level-1!==d,"last-node-isLeaf-line":s[d]&&this.node.level-1===d},style:{left:this.indent*d+"px"}}));return u("span",{class:"element-tree-node-label-wrapper"},[l].concat(r).concat([u("span",{class:"element-tree-node-line-hor",style:{width:(this.node.isLeaf?24:8)+"px",left:(this.node.level-1)*this.indent+"px"}})]))}}),D={class:"card-header"},A=g("p",{class:"font-medium"}," 扩展 Elemenet Plus 的树形组件包括虚拟树组件，支持连接线 ",-1),P=g("div",{class:"card-header"},"普通树结构",-1),V={class:"max-h-[550px] overflow-y-auto"},q={class:"text-sm"},I=g("div",{class:"card-header"},"虚拟树结构",-1),N={class:"max-h-[550px] overflow-y-auto"},E={class:"text-sm"},T=i(o(d({},{name:"LineTree"}),{__name:"line-tree",setup(e){const t=c(p().wholeMenus,!0),a=f((()=>b(t))),l=m(a.value),s={value:"uniqueId",children:"children"};return(e,t)=>{const n=w("el-link"),r=w("el-tree"),d=w("el-card"),o=w("el-col"),i=w("el-tree-v2"),u=w("el-row");return x(),v(d,{shadow:"never"},{header:y((()=>[g("div",D,[A,_(n,{class:"mt-2",href:"https://github.com/pure-admin/vue-pure-admin/blob/main/src/views/able/line-tree.vue",target:"_blank"},{default:y((()=>[S(" 代码位置 src/views/able/line-tree.vue ")])),_:1})])])),default:y((()=>[_(u,{gutter:24},{default:y((()=>[_(o,{xs:24,sm:24,md:12,lg:12,xl:12,class:"mb-[20px]"},{default:y((()=>[_(d,{shadow:"never"},{header:y((()=>[P])),default:y((()=>[g("div",V,[_(r,{data:a.value,props:s,"show-checkbox":"","default-expand-all":"","node-key":"uniqueId",indent:30},{default:y((({node:e})=>[_(L(j),{node:e,showLabelLine:!0},{"node-label":y((()=>[g("span",q,k(L(O)(e.data.meta.title)),1)])),_:2},1032,["node"])])),_:1},8,["data"])])])),_:1})])),_:1}),_(o,{xs:24,sm:24,md:12,lg:12,xl:12},{default:y((()=>[_(d,{shadow:"never"},{header:y((()=>[I])),default:y((()=>[g("div",N,[_(i,{data:a.value,props:s,"show-checkbox":"",height:550,"default-expanded-keys":L(l)},{default:y((({node:e})=>[_(L(j),{node:e,treeData:a.value,showLabelLine:!0,indent:30},{"node-label":y((()=>[g("span",E,k(L(O)(e.data.meta.title)),1)])),_:2},1032,["node","treeData"])])),_:1},8,["data","default-expanded-keys"])])])),_:1})])),_:1})])),_:1})])),_:1})}}}));export{T as default};
